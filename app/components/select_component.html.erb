<select style="background: white" name="<%= field_name %>" class="custom-select w-full bg-white h-auto border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 h-10 rounded-md">
  <button type="button" class="border-none bg-transparent p-0 w-full text-left cursor-pointer">
    <selectedcontent class="flex items-center gap-3 py-2">
      <span class="flex shrink-0 w-5 h-5 text-primary items-center justify-center">
        <%= render_icon(selected_option[:icon]) %>
      </span>
      <span class="flex flex-col flex-1 gap-0.5">
        <span class="font-medium text-sm text-foreground leading-5"><%= selected_option[:title] %></span>
        <span class="text-xs text-muted-foreground leading-tight"><%= selected_option[:description] %></span>
      </span>
    </selectedcontent>
    <%= lucide_icon("chevrons-up-down", class: "ml-auto my-auto text-muted-foreground")%>
  </button>

  <% options.each do |option| %>
    <option value="<%= option[:value] %>" <%= 'selected' if option[:value] == selected_option[:value] %> class="flex items-center gap-3 p-3 rounded-lg m-0.5 hover:bg-accent hover:text-accent-foreground data-[state=checked]:bg-green-200 data-[state=checked]:text-accent-foreground">
      <span class="flex shrink-0 w-5 h-5 text-primary items-center justify-center">
        <%= render_icon(option[:icon]) %>
      </span>
      <span class="flex flex-col flex-1 gap-0.5">
        <span class="font-medium text-sm text-foreground leading-5"><%= option[:title] %></span>
        <span class="text-xs text-muted-foreground leading-tight"><%= option[:description] %></span>
      </span>
    </option>
  <% end %>
</select>

<style>
.custom-select,
.custom-select::picker(select) {
  appearance: base-select;
}

select {
  appearance: base-select;
 
    &::picker-icon {
      display: none;
    }

    &::picker(select) {
      appearance: base-select;
      border: 1px solid #e4e4e7;
      padding: 0.25rem;
      margin-top: 0.25rem;
      border-radius: calc(0.5rem - 2px);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -2px rgba(0, 0, 0, 0.1);
      cursor: default;
      transition: opacity 225ms ease-in-out, transform 225ms ease-in-out;
      transform-origin: top;
      transform: translateY(0);
      opacity: 1;
      
      @starting-style {
        transform: translateY(-0.25rem) scale(0.95);
        opacity: 0;
      }
    }
    & option {
    padding: 0.375rem 0.5rem;
    border-radius: calc(0.5rem - 4px);
    outline: none;

    &::after {
      content: "";
      width: 1rem;
      height: 1.5rem;
      margin-left: auto;
      opacity: 0;
      background: center / contain no-repeat
        url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%2318181b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M20 6 9 17l-5-5'%3E%3C/path%3E%3C/svg%3E");
    }

    &::checkmark {
      display: none;
    }

    &:checked {
      background-color: var(--background);

      &::after {
        opacity: 1;
      }
    }

    &:hover,
    &:focus-visible {
      background-color: #f4f4f5;
      color: #18181b;
    }
  }
  }
</style>